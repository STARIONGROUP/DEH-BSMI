// -------------------------------------------------------------------------------------------------
//  <copyright file="ITraceabilityDotFileGenerator.cs" company="Starion Group S.A.">
// 
//    Copyright 2019-2025 Starion Group S.A.
// 
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
// 
//        http://www.apache.org/licenses/LICENSE-2.0
// 
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.
// 
//  </copyright>
//  ------------------------------------------------------------------------------------------------

namespace DEHBSMI.Tools.Generators
{
    using System;
    using System.Collections.Generic;
    using System.IO;

    using CDP4Common.EngineeringModelData;
    using CDP4Common.SiteDirectoryData;

    /// <summary>
    /// The purpose of the <see cref="ITraceabilityDotFileGenerator"/> is to generate a Graphviz
    /// dot file that displays traceability from the various levels of the requirements
    /// </summary>
    public interface ITraceabilityDotFileGenerator
    {
        /// <summary>
        /// Generates the dot file
        /// </summary>
        /// <param name="iteration">
        /// The <see cref="Iteration"/> for which the traceability dot file is to be generated
        /// </param>
        /// <param name="regionConfigurations">
        /// The <see cref="RequirementsSpecification"/> and <see cref="Category"/> combinations that are used to
        /// generate sub-graphs
        /// </param>
        /// <param name="dotFileInfo">
        /// the generated dot file
        /// </param>
        public void Generate(Iteration iteration, IEnumerable<Tuple<RequirementsSpecification, IEnumerable<Category>>> regionConfigurations, FileInfo dotFileInfo);

        /// <summary>
        /// Verifies whether the extension of the <paramref name="outputPath"/> is valid or not
        /// </summary>
        /// <param name="outputPath">
        /// The subject <see cref="FileInfo"/> to check
        /// </param>
        /// <returns>
        /// A Tuple of bool and string, where the string contains a description of the verification.
        /// Either stating that the extension is valid or not.
        /// </returns>
        public Tuple<bool, string> IsValidReportExtension(FileInfo outputPath);

        /// <summary>
        /// Queries the name of the report type that is generated by the current <see cref="IReportGenerator"/>
        /// </summary>
        /// <returns>
        /// human-readable name of the report type
        /// </returns>
        public string QueryReportType();
    }
}